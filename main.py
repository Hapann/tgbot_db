# main.py
from telegram.ext import ApplicationBuilder, MessageHandler, filters
from globals.config import TOKEN
from handlers.start import register_start_handler
from handlers.rules import register_rules_handler
from handlers.replies import register_replies_handler
from handlers.messages import new_message_handler
from handlers.unknown import register_unknown_handler
from loger.logger import logger
from database import db
import asyncio
import sys


async def shutdown():
    """–ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã"""
    logger.info("üõë –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...")
    try:
        if hasattr(application, "updater") and application.updater.running:
            await application.updater.stop()
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ Updater: {str(e)}")

    try:
        if application:
            await application.stop()
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ Application: {str(e)}")

    try:
        # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ db –∏–º–µ–µ—Ç –º–µ—Ç–æ–¥ is_connected() –∏–ª–∏ –∞—Ç—Ä–∏–±—É—Ç
        if await db.is_connected():
            await db.close()
            logger.info("üõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –ë–î: {str(e)}")


async def main():
    global application
    application = None

    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î (—É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤–Ω—É—Ç—Ä–∏ –º–µ—Ç–æ–¥–æ–≤ –Ω–µ—Ç –ª–æ–≥–æ–≤)
        await db.connect()
        logger.info("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∞")
        await db.create_tables()
        logger.info("‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã")

        application = ApplicationBuilder().token(TOKEN).build()

        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        register_start_handler(application)
        register_rules_handler(application)
        register_replies_handler(application)
        application.add_handler(
            MessageHandler(
                filters.ChatType.PRIVATE & ~filters.COMMAND,
                new_message_handler,
            )
        )
        register_unknown_handler(application)

        logger.info("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")

        # –ó–∞–ø—É—Å–∫ polling
        await application.initialize()
        await application.start()
        if application.updater:
            await application.updater.start_polling(drop_pending_updates=True)

        # –û–∂–∏–¥–∞–Ω–∏–µ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ (–ø—Ä–µ—Ä—ã–≤–∞–µ—Ç—Å—è Ctrl+C)
        await asyncio.Event().wait()

    except (asyncio.CancelledError, KeyboardInterrupt):
        pass
    except Exception as e:
        logger.critical(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}", exc_info=True)
    finally:
        await shutdown()


if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        sys.exit(0)
